import React, { useEffect, useState } from 'react';
import api from '../api';
import '../static/css/PlanSelector.css';
import PhoneInput from 'react-phone-input-2';

const PlanSelector = () => {
  const [blocks, setBlocks]               = useState([]);
  const [floors, setFloors]               = useState([]);
  const [selectedBlock, setSelectedBlock] = useState(null);
  const [selectedFloor, setSelectedFloor] = useState(null);
  const [plan, setPlan]                   = useState(null);

  const [name, setName]     = useState('');
  const [phone, setPhone]   = useState('');
  const [agreed, setAgreed] = useState(false);

  // 1Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–ª–æ–∫–∏ –∏ —Å—Ä–∞–∑—É –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–≤—ã–π
  useEffect(() => {
    api.get('/blocks/')
      .then(({ data }) => {
        setBlocks(data);
        if (data.length) setSelectedBlock(data[0]);
      })
      .catch(console.error);
  }, []);

  // 2Ô∏è‚É£ –ü—Ä–∏ —Å–º–µ–Ω–µ –±–ª–æ–∫–∞ ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å —ç—Ç–∞–∂–∏/–ø–ª–∞–Ω, –∑–∞–ø—Ä–æ—Å–∏—Ç—å –µ–≥–æ —ç—Ç–∞–∂–∏ –∏ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–≤—ã–π
  useEffect(() => {
    if (!selectedBlock) return;

    setFloors([]);
    setSelectedFloor(null);
    setPlan(null);

    api.get('/floors/', { params: { block: selectedBlock.id } })
      .then(({ data }) => {
        setFloors(data);
        if (data.length) setSelectedFloor(data[0]);
      })
      .catch(console.error);
  }, [selectedBlock]);

  // 3Ô∏è‚É£ –ü—Ä–∏ —Å–º–µ–Ω–µ —ç—Ç–∞–∂–∞ ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –ø–ª–∞–Ω; –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ø–ª–∞–Ω —ç—Ç–∞–∂–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
  useEffect(() => {
    if (!selectedFloor) return;

    setPlan(null);

    api.get('/plans/', { params: { floor: selectedFloor.id } })
      .then(({ data }) => {
        setPlan(data.length ? data[0] : null);
      })
      .catch(console.error);
  }, [selectedFloor]);

  // üì® –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã ‚Äî —Å–æ–∑–¥–∞—ë–º Application –Ω–∞ –±—ç–∫–µ
  const handleSubmit = async e => {
    e.preventDefault();
    if (!agreed) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏');
      return;
    }

    try {
      await api.post('/applications/', {
        name: name.trim(),
        phone: phone.trim(),
      });
      alert('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
      // –º–æ–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ:
      setName('');
      setPhone('');
      setAgreed(false);
    } catch (err) {
      console.error(err);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
    }
  };

  return (
    <div className="plan-selector" id="plan-selector">
        <div className='rez'>–†–µ–∑–∏–¥–µ–Ω—Ü–∏–∏</div>
      {/* === –§–∏–ª—å—Ç—Ä –±–ª–æ–∫–æ–≤ === */}
      <div className="filter-bar blocks-bar">
        {blocks.map(block => (
          <button
            key={block.id}
            className={`filter-btn ${
              selectedBlock?.id === block.id ? 'active' : ''
            }`}
            onClick={() => setSelectedBlock(block)}
          >
            –ë–ª–æ–∫ {block.name}
          </button>
        ))}
      </div>

      {/* === –§–∏–ª—å—Ç—Ä —ç—Ç–∞–∂–µ–π === */}
      <div className="filter-bar floors-bar">
        {floors.map(floor => (
          <button
            key={floor.id}
            className={`filter-btn ${
              selectedFloor?.id === floor.id ? 'active' : ''
            }`}
            onClick={() => setSelectedFloor(floor)}
          >
            {floor.level_display}
          </button>
        ))}
      </div>

      <div className="plan_and_app">
        {/* === –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ === */}
        <div className="plan-view">
          {plan ? (
            <div className="plan-card">
              <img
                src={plan.drawing}
                alt={`–ü–ª–∞–Ω: ${selectedBlock.name} / ${selectedFloor.level_display}`}
              />
            </div>
          ) : (
            <p className="no-plan">–ü–ª–∞–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ —ç—Ç–∞–∂–∞.</p>
          )}
        </div>

        <div className="more-arka">
          <div className="more_text" />

          {/* === –§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏ === */}
          <form className="contact-form" onSubmit={handleSubmit}>
            {/* –ò–º—è */}
            <div className="form-group">
              <div className="name">
                <label className="form-label">–ò–º—è</label>
                <input
                  type="text"
                  className="form-input"
                  value={name}
                  onChange={e => setName(e.target.value)}
                  required
                />
              </div>
            </div>

            {/* –¢–µ–ª–µ—Ñ–æ–Ω */}
            <div className="phone_input">
              <label className="form-label">–¢–µ–ª–µ—Ñ–æ–Ω</label>
              <PhoneInput
                country={'kz'}
                onlyCountries={['kz','ru','us','de','se','ch','sd','sr','sz','sy']}
                countryCodeEditable={false}
                enableSearch
                disableSearchIcon
                value={phone}
                onChange={setPhone}
                inputStyle={{
                  width: '100%',
                  background: 'transparent',
                  border: 'none',
                  borderBottom: '1px solid #fff',
                  borderRadius: 0,
                  color: '#fff',
                  fontSize: '1rem',
                  paddingLeft: '65px',
                }}
                buttonStyle={{
                  background: 'transparent',
                  border: 'none',
                  padding: '0 12px',
                }}
                dropdownStyle={{
                  background: '#fff',
                  color: '#000',
                  borderRadius: '8px',
                  boxShadow: '0 4px 12px rgba(0,0,0,0.15)',
                }}
              />
            </div>

            {/* –ß–µ–∫–±–æ–∫—Å */}
            <div className="form-group checkbox-group">
              <label>
                <input
                  type="checkbox"
                  checked={agreed}
                  onChange={e => setAgreed(e.target.checked)}
                  required
                />
                <span className="checkbox-label">
                  –Ø –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω –∏ —Å–æ–≥–ª–∞—Å–µ–Ω —Å{' '}
                  <a
                    href="https://seneca.kz/policy"
                    className="privacy-link"
                  >
                    –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ TOO " KEMEL PARTNERS"
                  </a>
                </span>
              </label>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ */}
            <button type="submit" className="submit-btn">
              –û–°–¢–ê–í–ò–¢–¨ –ó–ê–Ø–í–ö–£&nbsp;<span className="arrow">‚Üí</span>
            </button>
          </form>
        </div>
      </div>
    </div>
  );
};

export default PlanSelector;
